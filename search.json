[
  {
    "objectID": "grading.html",
    "href": "grading.html",
    "title": "Grading Policy",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "AI For Social Good",
    "section": "Course Description",
    "text": "Course Description\n\nDescription\nThis course explores the use of artificial intelligence (AI) to address critical challenges in societal domains such as healthcare, education, environment, and public safety. It aims to provide students with a deep understanding of how AI technologies can be applied ethically and effectively for social good, drawing from cutting-edge research. The course will focus on both the technical and societal implications of AI-driven solutions, highlighting the unique challenges and opportunities in this field. We will study the latest advancements in AI techniques presented at top-tier conferences like IJCAI, AAAI, KDD, and NeurIPS, examining how these can be harnessed to create impactful societal solutions.\n\n\nContents\nTopics will span a wide array of AI domains such as but limited to:\n\nHealthcare: AI for diagnosis, personalised medicine, public health monitoring, and remote care\nEnvironment and Sustainability: AI in climate modelling, pollution monitoring, energy efficiency, and conservation\nDisaster Resilience: AI for disaster prediction, response, and resource management\nEducation: Personalized learning systems, intelligent tutoring, analysis of educational outcomes\nPublic Safety and Security: Social engineering, AI for detecting misinformation, predictive policing\n\nThe AI technologies would include:\n\nSupervised Learning: Applications in classification and prediction tasks (e.g., disease diagnosis, fraud detection, poverty prediction)\nUnsupervised Learning: Clustering and anomaly detection for environmental monitoring, resource allocation\nSemi-supervised Learning: Addressing challenges with limited labelled data in social good applications\nReinforcement Learning: Applications in resource optimization, healthcare interventions, and adaptive learning systems\nNatural Language Processing (NLP): Sentiment analysis, misinformation detection, speech recognition for social applications\nComputer Vision: Object detection, segmentation and classification for environmental monitoring, healthcare imaging\nDeep Learning: Use of neural networks for complex social problems (e.g., medical imaging, disaster prediction)"
  },
  {
    "objectID": "index.html#textsreferences",
    "href": "index.html#textsreferences",
    "title": "AI For Social Good",
    "section": "Texts/References:",
    "text": "Texts/References:\nThere is no prescribed textbook for the course. We will be following research publications appearing at AAAI, IJCAI, KDD, Neurips, ICLR, and similar top conferences or symposiums.\nThere are some related courses at top universities that would serve as a good reference - AI for Social Impact course at Harvard - Social good at Google - AI for Social Good course at Stanford - AI for social good coursera specialisation"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Summary\n\n\n\nTBD"
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "FAQ",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "tentative.html",
    "href": "tentative.html",
    "title": "Tentative deadlines",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "exams/prereq.html",
    "href": "exams/prereq.html",
    "title": "Prerequsite test",
    "section": "",
    "text": "Instructions\n\nThis test is open book, open internet, open notes. You can use any resources you want to solve the problems.\nYou should be typing your answers in a Jupyter notebook.\nThe submission would be a link to a public GitHub repository containing the notebook. Fill this form to submit your solution.\nA random subset of students may have a viva post the exam. The viva would be based on the notebook and the solutions you have provided.\nThe test is open till 6th January 2024 9 PM. You can submit your solutions anytime before that.\nThis problem has to be solved individually. You cannot collaborate with anyone else.\nThe code should be written using Python.\nSome questions may require you to answer in text. You can use markdown cells to write your answers. Some questions may require you to write code. You can use code cells to write your code. Some questions may require you to write mathematical expressions. You can use LaTeX to write your expressions. You can write such LaTeX expressions in markdown cells.\nFor any other questions, please ask on the General channel on Slack.\n\n\n\n\nQuestions\n\nHow many multiplications and additions do you need to perform a matrix multiplication between a (n, k) and (k, m) matrix? Explain.\nWrite Python code to multiply the above two matrices. Solve using list of lists and then use numpy. Compare the timing of both solutions. Which one is faster? Why?\nFinding the highest element in a list requires one pass of the array. Finding the second highest element requires 2 passes of the the array. Using this method, what is the time complexity of finding the median of the array? Can you suggest a better method? Can you implement both these methods in Python and compare against numpy.median routine in terms of time?\nWhat is the gradient of the following function with respect to x and y? \\[\nx^2y+y^3\\sin(x)\n\\]\nUse JAX to confirm the gradient evaluated by your method matches the analytical solution corresponding to a few random values of x and y\nUse sympy to confirm that you obtain the same gradient analytically.\nCreate a Python nested dictionary to represent hierarchical information. We want to store record of students and their marks. Something like:\n\n2022\n\nBranch 1\n\nRoll Number: 1, Name: N, Marks:\n\nMaths: 100, English: 70 …\n\n\nBranch 2\n\n2023\n\nBranch 1\nBranch 2\n\n2024\n\nBranch 1\nBranch 2\n\n2025\n\nBranch 1\nBranch 2\n\n\nStore the same information using Python classes. We have an overall database which is a list of year objects. Each year contains a list of branches. Each branch contains a list of students. Each student has some properties like name, roll number and has marks in some subjects.\nUsing matplotlib plot the following functions on the domain: x = 0.5 to 100.0 in steps of 0.5.\n\n\\(y = x\\)\n\\(y = x^2\\)\n\\(y = \\frac{x^3}{100}\\)\n\\(y = \\sin(x)\\)\n\\(y = \\frac{\\sin(x)}{x}\\)\n\\(y = \\log(x)\\)\n\\(y = e^x\\)\n\nUsing numpy generate a matrix of size 20X5 containing random numbers drawn uniformly from the range of 1 to 2. Using Pandas create a dataframe out of this matrix. Name the columns of the dataframe as “a”, “b”, “c”, “d”, “e”. Find the column with the highest standard deviation. Find the row with the lowest mean.\nAdd a new column to the dataframe called “f” which is the sum of the columns “a”, “b”, “c”, “d”, “e”. Create another column called “g”. The value in the column “g” should be “LT8” if the value in the column “f” is less than 8 and “GT8” otherwise. Find the number of rows in the dataframe where the value in the column “g” is “LT8”. Find the standard deviation of the column “f” for the rows where the value in the column “g” is “LT8” and “GT8” respectively.\nWrite a small piece of code to explain broadcasting in numpy.\nWrite a function to compute the argmin of a numpy array. The function should take a numpy array as input and return the index of the minimum element. You can use the np.argmin function to verify your solution."
  },
  {
    "objectID": "quizzes.html",
    "href": "quizzes.html",
    "title": "Quizzes",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nDec 30, 2023\n\n\nPrerequsite test\n\n\n \n\n\n\n\n\nNo matching items"
  }
]